{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Section.js","components/Home/Home.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Elements","RightElements","Hamburger","show","Navbar","useState","hamNav","setHamNav","href","src","alt","onClick","className","backgroundImg","ItemText","FooterBox","ButtonContainer","LeftBtn","RightBtn","DownArrow","img","Section","title","subTitle","leftBtnText","rightBtnText","bottom","left","right","Box","Home","App","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23774360.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components';\n\nconst Navbar = () => {\n    const [hamNav, setHamNav] = useState(false);\n    return (\n        <Container>\n\n            <a href='/'>\n                <img src=\"/images/logo.svg\" alt=\"\" />\n            </a>\n            <Elements>\n                <a href=\"#\">Model S</a>\n                <a href=\"#\">Model Y</a>\n                <a href=\"#\">Model 3</a>\n                <a href=\"#\">Model X</a>\n                <a href=\"#\">Solar Roof</a>\n                <a href=\"#\">Solar Panel</a>\n            </Elements>\n            <RightElements>\n                <a href=\"#\">Shop</a>\n                <a href=\"#\">Account</a>\n                <a href=\"#\"><i onClick={() => setHamNav(true)} className=\"fas fa-bars\"></i></a>\n            </RightElements>\n            <Hamburger show={hamNav}>\n                <i onClick={() => setHamNav(false)} className=\"fas fa-times\"></i>\n                <li><a href=\"#\">Model S</a></li>\n                <li><a href=\"#\">Model Y</a></li>\n                <li><a href=\"#\">Model 3</a></li>\n                <li><a href=\"#\">Model X</a></li>\n                <li><a href=\"#\">Solar Roof</a></li>\n                <li><a href=\"#\">Solar Panel</a></li>\n                <li><a href=\"#\">Existing Inventory</a></li>\n                <li><a href=\"#\">Used Inventory</a></li>\n                <li><a href=\"#\">Trade In</a></li>\n                <li><a href=\"#\">Test Drive</a></li>\n                <li><a href=\"#\">Powerwall</a></li>\n                <li><a href=\"#\">Commercial Energy</a></li>\n                <li><a href=\"#\">Charging</a></li>\n                <li><a href=\"#\">Support</a></li>\n            </Hamburger>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    \n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    position: fixed;\n    display: flex;\n    top:0; right:0; left:0;\n    align-items:center;\n    padding: 10px 20px;\n    z-index: 0;\n`\nconst Elements = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    a{\n        font-weight: bold;\n        text-transform: uppercase;\n        padding: 0 10px;\n    }\n    @media(max-width:1120px){\n        display: none;\n    }\n`\nconst RightElements = styled.div`\n    a{\n        font-weight: bold;\n        text-transform: uppercase;\n        padding: 0 10px;\n    }\n`\nconst Hamburger = styled.div`\n    position: fixed;\n    top:0; bottom:0; right: 0;\n    z-index: 100;\n    background: #fff;\n    width: 300px;\n    list-style: none;\n    text-align: start;\n    padding: 25px;\n    padding-top: 50px;\n    transform: ${({ show }) => show ? 'translateX(0)' : 'translateX(100%)'};\n    transition: transform 0.3s ease-in-out;\n    i{\n        float: right;\n        margin-top: -34px;\n        margin-right:6px;\n        font-size: 18px;\n        cursor: pointer;\n    }\n    li{\n        font-weight: 500;\n        margin-top: 35px;\n    }\n`\n\nexport default Navbar;\n","import React from 'react'\nimport styled from 'styled-components';\nimport { Fade } from 'react-reveal';\nconst Section = ({ title, subTitle, leftBtnText, rightBtnText, backgroundImg }) => {\n    return (\n        <Container backgroundImg={backgroundImg}>\n            <Fade bottom>\n                <ItemText>\n                    <h1>{title}</h1>\n                    <p>{subTitle}</p>\n                </ItemText>\n            </Fade>\n\n            <FooterBox>\n                <ButtonContainer>\n                    <Fade left>\n                        {leftBtnText !== \"\" && <LeftBtn>\n                            {leftBtnText}\n                        </LeftBtn>}\n                    </Fade>\n                    <Fade right>\n                        {rightBtnText !== \"\" && <RightBtn>\n                            {rightBtnText}\n                        </RightBtn>}\n                    </Fade>\n                </ButtonContainer>\n                <DownArrow src=\"/images/down-arrow.svg\"></DownArrow>\n            </FooterBox>\n\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    width: 100vw;\n    height: 100vh;\n    ${'' /* background: red; */}\n    background-size: cover; \n    background-position: center;\n    background-image: ${({ backgroundImg }) => `url('/images/${backgroundImg}')`};\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n`\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`\nconst FooterBox = styled.div``\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 50px;\n    @media(max-width: 768px){\n        flex-direction: column;\n    }\n`\nconst LeftBtn = styled.div`\n    background-color: #171A20CC;\n    color: #FFFFFF;\n    text-transform: uppercase;\n    height: 40px;\n    border-radius: 25px;\n    width: 250px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    margin: 10px;\n    @media(max-width: 768px){\n        flex-direction: column;\n        width: 65vw;\n    }\n`\nconst RightBtn = styled(LeftBtn)`\n    background-color: #FFFFFFA6;\n    color: #393c41;\n`\nconst DownArrow = styled.img`\n    height: 40px;\n    ${'' /* overflow-x: hidden; */}\n    animation: moveArrow infinite 1.5s;\n\n`\nexport default Section\n","import React from 'react'\nimport styled from 'styled-components'\nimport Section from './Section'\nconst Home = () => {\n    return (\n        <Container>\n            <Box>\n                <Section title=\"Model S\" subTitle=\"Order Online for Touchless Delivery\" leftBtnText=\"Custom Order\" rightBtnText=\"Existing Inventory\" backgroundImg=\"model-s.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Model Y\" subTitle=\"Order Online for Touchless Delivery\" leftBtnText=\"Custom Order\" rightBtnText=\"Existing Inventory\" backgroundImg=\"model-y.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Model 3\" subTitle=\"Order Online for Touchless Delivery\" leftBtnText=\"Custom Order\" rightBtnText=\"Existing Inventory\" backgroundImg=\"model-3.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Model X\" subTitle=\"Order Online for Touchless Delivery\" leftBtnText=\"Custom Order\" rightBtnText=\"Existing Inventory\" backgroundImg=\"model-x.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Solar Panels\" subTitle=\"Lowest Cost Solar Panels in America\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" backgroundImg=\"solar-panel.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Solar Roof\" subTitle=\"Produce Clean Energy From Your Roof\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" backgroundImg=\"solar-roof.jpg\" />\n            </Box>\n            <Box>\n                <Section title=\"Accessories\" subTitle=\"\" leftBtnText=\"Shop Now\" rightBtnText=\"\" backgroundImg=\"accessories.jpg\" />\n            </Box>\n\n\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    height: 100vh;\n    scroll-snap-type: y mandotary;\n    overflow-y: scroll;\n`\nconst Box = styled.div`\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    scroll-snap-align: start;\n`\nexport default Home;\n","import React from 'react';\nimport Navigation from './components/Navbar/Navbar'\nimport Home from './components/Home/Home'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}